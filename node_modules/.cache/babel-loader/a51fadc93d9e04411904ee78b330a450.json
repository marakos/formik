{"ast":null,"code":"var _jsxFileName = \"/Users/petemarakos/Documents/React/formik/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form, useFormik } from \"formik\";\nimport { Container, Grid, Button } from \"@material-ui/core\";\nimport Upload from \"./Form\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  file: yup.mixed().required(\"Required\"),\n  file2: yup.mixed().required(\"Required\")\n});\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      file: \"\",\n      file2: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n      let data = new FormData();\n      data.append(\"file\", values.file);\n      console.log(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            file: \"\",\n            file2: \"\"\n          },\n          onSubmit: async values => {\n            console.log(values);\n            let data = new FormData();\n            await data.append(\"file\", values.file);\n            console.log(data);\n          },\n          children: formProps => /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: formik.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                file: \"file\",\n                formProps: formProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                file: \"file2\",\n                formProps: formProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/petemarakos/Documents/React/formik/src/App.js"],"names":["React","Formik","Form","useFormik","Container","Grid","Button","Upload","yup","validationSchema","object","shape","file","mixed","required","file2","App","formik","initialValues","onSubmit","values","console","log","data","FormData","append","formProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,QAAxC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,KAAJ,GAAYC,QAAZ,CAAqB,UAArB,CADoC;AAE1CC,EAAAA,KAAK,EAAEP,GAAG,CAACK,KAAJ,GAAYC,QAAZ,CAAqB,UAArB;AAFmC,CAAnB,CAAzB;;AAKA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGd,SAAS,CAAC;AACvBe,IAAAA,aAAa,EAAE;AAAEN,MAAAA,IAAI,EAAE,EAAR;AAAYG,MAAAA,KAAK,EAAE;AAAnB,KADQ;AAEvBN,IAAAA,gBAAgB,EAAEA,gBAFK;AAGvBU,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBL,MAAM,CAACR,IAA3B;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD;AARsB,GAAD,CAAxB;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AAAEX,YAAAA,IAAI,EAAE,EAAR;AAAYG,YAAAA,KAAK,EAAE;AAAnB,WADjB;AAEE,UAAA,QAAQ,EAAE,MAAOK,MAAP,IAAkB;AAC1BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,gBAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACA,kBAAMD,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBL,MAAM,CAACR,IAA3B,CAAN;AACAS,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,WAPH;AAAA,oBASIG,SAAD,iBACC,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAET,MAAM,CAACE,QAAvB;AAAA,oCACE,QAAC,IAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,MAAb;AAAoB,gBAAA,SAAS,EAAEO;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,IAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,OAAb;AAAqB,gBAAA,SAAS,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAzCQV,G;UACQb,S;;;KADRa,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form, useFormik } from \"formik\";\nimport { Container, Grid, Button } from \"@material-ui/core\";\nimport Upload from \"./Form\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object().shape({\n  file: yup.mixed().required(\"Required\"),\n  file2: yup.mixed().required(\"Required\"),\n});\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: { file: \"\", file2: \"\" },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n      let data = new FormData();\n      data.append(\"file\", values.file);\n      console.log(data);\n    },\n  });\n\n  return (\n    <div className='App'>\n      <Container>\n        <Grid>\n          <Formik\n            initialValues={{ file: \"\", file2: \"\" }}\n            onSubmit={async (values) => {\n              console.log(values);\n              let data = new FormData();\n              await data.append(\"file\", values.file);\n              console.log(data);\n            }}\n          >\n            {(formProps) => (\n              <Form onSubmit={formik.onSubmit}>\n                <Grid>\n                  <Upload file='file' formProps={formProps} />\n                </Grid>\n                <Grid>\n                  <Upload file='file2' formProps={formProps} />\n                </Grid>\n                <Button type='submit'>Submit</Button>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}